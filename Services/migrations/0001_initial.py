# Generated by Django 5.1.4 on 2025-01-23 17:22

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Users', '0014_user_phone_number'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(help_text='Name of the service', max_length=255)),
                ('platform', models.CharField(choices=[('Instagram', 'Instagram'), ('Facebook', 'Facebook'), ('Snapchat', 'Snapchat'), ('Tiktok', 'Tiktok'), ('Youtube', 'Youtube')], max_length=50)),
                ('video_length', models.PositiveIntegerField(help_text='Length of the video in seconds')),
                ('hooks_numbers', models.PositiveIntegerField(help_text='Number of hooks in the video')),
                ('call_to_action', models.CharField(help_text='Number of calls to action (e.g., 1-2)', max_length=50)),
                ('voice_over', models.BooleanField(default=False, help_text='Does the video include voice-over?')),
                ('face_appearing', models.BooleanField(default=False, help_text='Does the video include face appearing?')),
                ('price', models.DecimalField(decimal_places=2, help_text='Price in Syrian pounds', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='Users.creator')),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('ugc_type', models.CharField(choices=[('R', 'Reviews & Testimonials'), ('U', 'Unboxing products'), ('T', 'Tutoials & How to use'), ('G', 'Giveaway & Discounts')], max_length=1)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('views_count', models.IntegerField()),
                ('average_rating', models.FloatField(default=0.0)),
                ('category', models.ManyToManyField(related_name='content', to='Services.category')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='Users.creator')),
                ('service', models.ForeignKey(default='1', help_text='Service associated with this content', on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='Services.service')),
            ],
            options={
                'ordering': ['ugc_type', 'views_count'],
            },
        ),
        migrations.CreateModel(
            name='ServiceVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_file', models.FileField(blank=True, help_text='Upload a video for this service', null=True, upload_to='service_videos/')),
                ('description', models.TextField(blank=True, help_text='Optional description for the video')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='Services.service')),
            ],
        ),
    ]
